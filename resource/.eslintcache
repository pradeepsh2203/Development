[{"C:\\bhawak\\Development\\resource\\src\\index.js":"1","C:\\bhawak\\Development\\resource\\src\\App.js":"2","C:\\bhawak\\Development\\resource\\src\\reportWebVitals.js":"3","C:\\bhawak\\Development\\resource\\src\\components\\Header.js":"4","C:\\bhawak\\Development\\resource\\src\\components\\Login.js":"5","C:\\bhawak\\Development\\resource\\src\\components\\Vision.js":"6"},{"size":517,"mtime":1608217780508,"results":"7","hashOfConfig":"8"},{"size":351,"mtime":1608285829893,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1608217780508,"results":"10","hashOfConfig":"8"},{"size":1354,"mtime":1608217780508,"results":"11","hashOfConfig":"8"},{"size":2763,"mtime":1608217780508,"results":"12","hashOfConfig":"8"},{"size":3137,"mtime":1608568478611,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"wu6rnn",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\bhawak\\Development\\resource\\src\\index.js",[],["29","30"],"C:\\bhawak\\Development\\resource\\src\\App.js",[],"C:\\bhawak\\Development\\resource\\src\\reportWebVitals.js",[],"C:\\bhawak\\Development\\resource\\src\\components\\Header.js",["31","32"],"import React,{useContext} from 'react'\r\nimport { Navbar,Nav,Button } from \"react-bootstrap\";\r\nimport Login from './Login';\r\n\r\n\r\n\r\n\r\nconst Header = () =>{\r\n\r\n\r\n\r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" variant=\"light\" className=\"header\">\r\n          <Navbar.Brand href=\"#home\" className=\"mx-5 title\">\r\n             Navbar\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"ml-auto \">\r\n                <Nav.Link href=\"#home\" className=\"px-5 nav\">\r\n                  <span>Home</span>\r\n                </Nav.Link>\r\n                <Nav.Link href=\"#features\" className=\"px-5 nav\">\r\n                  <span>About</span>\r\n                </Nav.Link>\r\n                <Nav.Link href=\"#pricing\" className=\"px-5 nav\">\r\n                  <span>Contact</span>\r\n                </Nav.Link>\r\n                <Button variant=\"outline-success\" size=\"lg\" className=\"px-4 mx-2 mb-2 mt-1 nav-button h1\">\r\n                  Login\r\n                </Button>\r\n                <Button variant=\"outline-success\" size=\"lg\" className=\" px-4 mx-2  mb-2  mt-1 nav-button\" >\r\n                  Sign Up\r\n                </Button>\r\n             </Nav>\r\n           </Navbar.Collapse>\r\n         </Navbar>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\bhawak\\Development\\resource\\src\\components\\Login.js",["33","34","35","36"],"import React from 'react';\r\n\r\nconst Login = ( ) => {\r\n\r\nreturn (\r\n<React.Fragment>\r\n<div class=\"modal fade\"  id=\"darkModalForm\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\"\r\n  aria-hidden=\"true\">\r\n  <div class=\"modal-dialog form-dark\" role=\"document\">\r\n    \r\n    <div class=\"modal-content card card-image\" style=\"background-image: url('https://mdbootstrap.com/img/Photos/Others/pricing-table%20(7).jpg');\">\r\n      <div class=\"text-white rgba-stylish-strong py-5 px-5 z-depth-4\">\r\n       \r\n        <div class=\"modal-header text-center pb-4\">\r\n          <h3 class=\"modal-title w-100 white-text font-weight-bold\" id=\"myModalLabel\"><strong>SIGN</strong> <a\r\n              class=\"green-text font-weight-bold\"><strong> UP</strong></a></h3>\r\n          <button type=\"button\" class=\"close white-text\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n          </button>\r\n        </div>\r\n        \r\n        <div class=\"modal-body\">\r\n          \r\n          <div class=\"md-form mb-5\">\r\n            <input type=\"email\" id=\"Form-email5\" class=\"form-control validate white-text\"/>\r\n            <label data-error=\"wrong\" data-success=\"right\" for=\"Form-email5\">Your email</label>\r\n          </div>\r\n\r\n          <div class=\"md-form pb-3\">\r\n            <input type=\"password\" id=\"Form-pass5\" class=\"form-control validate white-text\"/>\r\n            <label data-error=\"wrong\" data-success=\"right\" for=\"Form-pass5\">Your password</label>\r\n            <div class=\"form-group mt-4\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" id=\"checkbox624\"/>\r\n              <label for=\"checkbox624\" class=\"white-text form-check-label\">Accept the<span class=\"green-text font-weight-bold\">\r\n                  Terms and Conditions</span></label>\r\n            </div>\r\n          </div>\r\n\r\n          \r\n          <div class=\"row d-flex align-items-center mb-4\">\r\n\r\n            \r\n            <div class=\"text-center mb-3 col-md-12\">\r\n              <button type=\"button\" class=\"btn btn-success btn-block btn-rounded z-depth-1\">Sign up</button>\r\n            </div>\r\n            \r\n          </div>\r\n          \r\n          \r\n          <div class=\"row\">\r\n\r\n            \r\n            <div class=\"col-md-12\">\r\n              <p class=\"font-small white-text d-flex justify-content-end\">Have an account? <a href=\"#\" class=\"green-text ml-1 font-weight-bold\">\r\n                  Log in</a></p>\r\n            </div>\r\n            \r\n          </div>\r\n         \r\n        </div>\r\n      </div>\r\n    </div>\r\n    \r\n  </div>\r\n</div>\r\n\r\n\r\n<div class=\"text-center\">\r\n  <a href=\"\" class=\"btn btn-default btn-rounded\" data-toggle=\"modal\" data-target=\"#darkModalForm\">Launch modal\r\n    register Form</a>\r\n</div>\r\n</React.Fragment>\r\n)}\r\n\r\n\r\nexport default Login","C:\\bhawak\\Development\\resource\\src\\components\\Vision.js",["37","38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":1,"column":15,"nodeType":"46","messageId":"47","endLine":1,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},{"ruleId":"49","severity":1,"message":"50","line":11,"column":48,"nodeType":"51","endLine":11,"endColumn":147},{"ruleId":"52","severity":1,"message":"53","line":15,"column":109,"nodeType":"54","endLine":16,"endColumn":51},{"ruleId":"52","severity":1,"message":"55","line":54,"column":92,"nodeType":"54","endLine":54,"endColumn":145},{"ruleId":"52","severity":1,"message":"55","line":69,"column":3,"nodeType":"54","endLine":69,"endColumn":99},{"ruleId":"56","severity":1,"message":"57","line":92,"column":17,"nodeType":"54","endLine":92,"endColumn":88},{"ruleId":"56","severity":1,"message":"57","line":101,"column":17,"nodeType":"54","endLine":101,"endColumn":90},{"ruleId":"56","severity":1,"message":"57","line":108,"column":17,"nodeType":"54","endLine":108,"endColumn":89},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'Login' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","no-global-assign","no-unsafe-negation"]